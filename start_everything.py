#!/usr/bin/env python3
"""
–£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É:
- Flask –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ (web_admin.py)
- ngrok (–æ—Ç—Ä–∏–º—É—î –ø—É–±–ª—ñ—á–Ω—É URL)
- Telegram –±–æ—Ç–∞ (node bot.js) –∑ –∞–∫—Ç—É–∞–ª—å–Ω–æ—é ngrok URL
–í—Å–µ –ø—Ä–∞—Ü—é—î –≤ –æ–¥–Ω–æ–º—É –ø—Ä–æ—Ü–µ—Å—ñ, –∑—Ä—É—á–Ω–∏–π –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —ñ –∑—É–ø–∏–Ω–∫–∞.
"""
import os
import subprocess
import time
import requests
import signal
import sys
from datetime import datetime

ADMIN_PORT = int(os.getenv('ADMIN_PORT', 3000))
ADMIN_PASSWORD = os.getenv('ADMIN_PASSWORD', 'admin123')

processes = []

def start_flask():
    print("\nüöÄ –ó–∞–ø—É—Å–∫ Flask –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ...")
    proc = subprocess.Popen([
        'python3', 'web_admin.py'
    ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    processes.append(proc)
    # –ß–µ–∫–∞—î–º–æ –∑–∞–ø—É—Å–∫—É Flask
    for i in range(20):
        try:
            r = requests.get(f'http://localhost:{ADMIN_PORT}', timeout=1)
            if r.status_code in [200, 302]:
                print(f"‚úÖ Flask –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—â–µ–Ω–∞ –Ω–∞ http://localhost:{ADMIN_PORT}")
                return proc
        except Exception:
            pass
        time.sleep(1)
    print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ Flask –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å!")
    stop_all()
    sys.exit(1)

def start_ngrok():
    print("\nüåê –ó–∞–ø—É—Å–∫ ngrok...")
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok
    proc = subprocess.Popen([
        'ngrok', 'http', str(ADMIN_PORT)
    ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    processes.append(proc)
    # –ß–µ–∫–∞—î–º–æ –ø–æ—è–≤–∏ –ø—É–±–ª—ñ—á–Ω–æ—ó URL
    for i in range(20):
        try:
            r = requests.get('http://localhost:4040/api/tunnels', timeout=2)
            tunnels = r.json().get('tunnels', [])
            if tunnels:
                url = tunnels[0]['public_url']
                print(f"‚úÖ Ngrok URL: {url}")
                return url, proc
        except Exception:
            pass
        time.sleep(1)
    print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ ngrok URL!")
    stop_all()
    sys.exit(1)

def start_bot(admin_url):
    print("\nü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
    env = os.environ.copy()
    env['ADMIN_URL'] = admin_url
    proc = subprocess.Popen([
        'npm', 'start'
    ], env=env, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    processes.append(proc)
    time.sleep(3)
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π –∑ ADMIN_URL={admin_url}")
    return proc

def stop_all(*args):
    print("\nüõë –ó—É–ø–∏–Ω–∫–∞ –≤—Å—ñ—Ö –ø—Ä–æ—Ü–µ—Å—ñ–≤...")
    for proc in processes:
        try:
            proc.terminate()
        except Exception:
            pass
    time.sleep(2)
    print("‚úÖ –í—Å—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∑—É–ø–∏–Ω–µ–Ω–æ!")
    sys.exit(0)

def show_status(admin_url):
    print("\n====================================")
    print(f"üåê –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å: {admin_url}")
    print(f"üîë –ü–∞—Ä–æ–ª—å: {ADMIN_PASSWORD}")
    print(f"‚è∞ –ß–∞—Å –∑–∞–ø—É—Å–∫—É: {datetime.now().strftime('%H:%M:%S')}")
    print("====================================\n")
    print("üí° –î–ª—è –∑—É–ø–∏–Ω–∫–∏ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C")

def main():
    signal.signal(signal.SIGINT, stop_all)
    signal.signal(signal.SIGTERM, stop_all)
    print("\nüöÄ –£–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫: Flask + ngrok + Telegram –±–æ—Ç")
    flask_proc = start_flask()
    ngrok_url, ngrok_proc = start_ngrok()
    bot_proc = start_bot(ngrok_url)
    show_status(ngrok_url)
    # –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
    try:
        while True:
            for proc in processes:
                if proc.poll() is not None:
                    print(f"‚ùå –û–¥–∏–Ω –∑ –ø—Ä–æ—Ü–µ—Å—ñ–≤ –∑–∞–≤–µ—Ä—à–∏–≤—Å—è (PID: {proc.pid})! –ó—É–ø–∏–Ω–∫–∞...")
                    stop_all()
            time.sleep(5)
    except KeyboardInterrupt:
        stop_all()

if __name__ == '__main__':
    main() 