#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –∑ ngrok
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä—é—î –ø—É–±–ª—ñ—á–Ω—É URL –¥–ª—è –¥–æ—Å—Ç—É–ø—É
"""

import os
import subprocess
import time
import requests
import json
import threading
from datetime import datetime

class NgrokAdmin:
    def __init__(self):
        self.admin_port = int(os.getenv('ADMIN_PORT', 3000))
        self.ngrok_process = None
        self.admin_process = None
        self.public_url = None
        
    def start_admin_panel(self):
        """–ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ...")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å —É —Ñ–æ–Ω–æ–≤–æ–º—É —Ä–µ–∂–∏–º—ñ
            self.admin_process = subprocess.Popen([
                'python3', 'web_admin.py'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            time.sleep(3)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –ø—Ä–∞—Ü—é—î
            try:
                response = requests.get(f'http://localhost:{self.admin_port}', timeout=5)
                if response.status_code in [200, 302]:  # 302 - redirect to login
                    print("‚úÖ –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
                    return True
            except:
                pass
                
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ")
            return False
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
            return False
    
    def start_ngrok(self):
        """–ó–∞–ø—É—Å–∫ ngrok"""
        print("üåê –ó–∞–ø—É—Å–∫ ngrok...")
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok
            self.ngrok_process = subprocess.Popen([
                'ngrok', 'http', str(self.admin_port)
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ ngrok –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            time.sleep(5)
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –ø—É–±–ª—ñ—á–Ω—É URL
            try:
                response = requests.get('http://localhost:4040/api/tunnels', timeout=10)
                if response.status_code == 200:
                    tunnels = response.json()['tunnels']
                    if tunnels:
                        self.public_url = tunnels[0]['public_url']
                        print(f"‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω–∏–π!")
                        print(f"üåê –ü—É–±–ª—ñ—á–Ω–∞ URL: {self.public_url}")
                        return True
            except:
                pass
                
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É ngrok")
            return False
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
            return False
    
    def update_bot_admin_url(self):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –≤ –±–æ—Ç—ñ"""
        if not self.public_url:
            return
            
        print("ü§ñ –û–Ω–æ–≤–ª–µ–Ω–Ω—è URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –≤ –±–æ—Ç—ñ...")
        
        try:
            # –ß–∏—Ç–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –∫–æ–¥ –±–æ—Ç–∞
            with open('bot.js', 'r', encoding='utf-8') as f:
                bot_code = f.read()
            
            # –ó–∞–º—ñ–Ω—é—î–º–æ URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ
            old_pattern = r"const adminUrl = process\.env\.ADMIN_URL \|\| 'http://localhost:3000';"
            new_pattern = f"const adminUrl = process.env.ADMIN_URL || '{self.public_url}';"
            
            if old_pattern in bot_code:
                bot_code = bot_code.replace(old_pattern, new_pattern)
                
                # –ó–±–µ—Ä—ñ–≥–∞—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –∫–æ–¥
                with open('bot.js', 'w', encoding='utf-8') as f:
                    f.write(bot_code)
                
                print("‚úÖ URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ –≤ –±–æ—Ç—ñ!")
                
                # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ —è–∫—â–æ –≤—ñ–Ω –∑–∞–ø—É—â–µ–Ω–∏–π
                self.restart_bot()
                
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è URL: {e}")
    
    def restart_bot(self):
        """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        try:
            # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –±–æ—Ç–∞
            subprocess.run(['pkill', '-f', 'node bot.js'], capture_output=True)
            time.sleep(2)
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –∑–Ω–æ–≤—É
            subprocess.Popen(['npm', 'start'], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            print("üîÑ –ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∏–π –∑ –Ω–æ–≤–æ—é URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ!")
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")
    
    def show_status(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å—É"""
        print("\n" + "="*60)
        print("üéØ –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–ò")
        print("="*60)
        
        if self.public_url:
            print(f"üåê –ü—É–±–ª—ñ—á–Ω–∞ URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ: {self.public_url}")
            print(f"üîë –ü–∞—Ä–æ–ª—å: admin123")
            print(f"üì± –í—ñ–¥–∫—Ä–∏–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ –¥–ª—è –¥–æ—Å—Ç—É–ø—É")
        else:
            print("‚ùå Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π")
            
        print(f"üîß –õ–æ–∫–∞–ª—å–Ω–∏–π –ø–æ—Ä—Ç: {self.admin_port}")
        print(f"‚è∞ –ß–∞—Å –∑–∞–ø—É—Å–∫—É: {datetime.now().strftime('%H:%M:%S')}")
        print("="*60)
    
    def monitor_processes(self):
        """–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—ñ–≤"""
        while True:
            try:
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –ø—Ä–∞—Ü—é—î
                if self.admin_process and self.admin_process.poll() is not None:
                    print("‚ùå –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑—É–ø–∏–Ω–∏–ª–∞—Å—è!")
                    break
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ ngrok –ø—Ä–∞—Ü—é—î
                if self.ngrok_process and self.ngrok_process.poll() is not None:
                    print("‚ùå Ngrok –∑—É–ø–∏–Ω–∏–≤—Å—è!")
                    break
                
                time.sleep(10)
                
            except KeyboardInterrupt:
                break
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É: {e}")
                break
    
    def cleanup(self):
        """–û—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ"""
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏...")
        
        if self.admin_process:
            self.admin_process.terminate()
            print("‚úÖ –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑—É–ø–∏–Ω–µ–Ω–∞")
            
        if self.ngrok_process:
            self.ngrok_process.terminate()
            print("‚úÖ Ngrok –∑—É–ø–∏–Ω–µ–Ω–∏–π")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫—É"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ –∑ ngrok...")
        print("="*60)
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
            if not self.start_admin_panel():
                return
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok
            if not self.start_ngrok():
                return
            
            # –û–Ω–æ–≤–ª—é—î–º–æ URL –≤ –±–æ—Ç—ñ
            self.update_bot_admin_url()
            
            # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç—É—Å
            self.show_status()
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
            print("\nüìä –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—ñ–≤ –∞–∫—Ç–∏–≤–Ω–∏–π...")
            print("üí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
            
            self.monitor_processes()
            
        except KeyboardInterrupt:
            print("\nüëã –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        finally:
            self.cleanup()

if __name__ == '__main__':
    ngrok_admin = NgrokAdmin()
    ngrok_admin.run() 