#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞ —Ç–∞ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ —Ä–∞–∑–æ–º –∑ ngrok
–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –≤—Å–µ –¥–ª—è —Ä–æ–±–æ—Ç–∏
"""

import os
import subprocess
import time
import requests
import json
import threading
from datetime import datetime

class BotAdminLauncher:
    def __init__(self):
        self.admin_port = int(os.getenv('ADMIN_PORT', 3000))
        self.ngrok_process = None
        self.admin_process = None
        self.bot_process = None
        self.public_url = None
        
    def check_dependencies(self):
        """–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"""
        print("üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...")
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ ngrok
        try:
            result = subprocess.run(['ngrok', 'version'], capture_output=True, text=True)
            if result.returncode == 0:
                print("‚úÖ Ngrok –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
            else:
                print("‚ùå Ngrok –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
                return False
        except:
            print("‚ùå Ngrok –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
            return False
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Node.js
        try:
            result = subprocess.run(['node', '--version'], capture_output=True, text=True)
            if result.returncode == 0:
                print("‚úÖ Node.js –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
            else:
                print("‚ùå Node.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π")
                return False
        except:
            print("‚ùå Node.js –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π")
            return False
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        try:
            import flask
            import requests
            print("‚úÖ Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ")
        except ImportError as e:
            print(f"‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ Python –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ: {e}")
            print("üí° –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å: pip3 install -r requirements_admin.txt")
            return False
        
        return True
    
    def start_ngrok(self):
        """–ó–∞–ø—É—Å–∫ ngrok"""
        print("üåê –ó–∞–ø—É—Å–∫ ngrok...")
        
        try:
            # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏ ngrok
            subprocess.run(['pkill', '-f', 'ngrok'], capture_output=True)
            time.sleep(2)
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok
            self.ngrok_process = subprocess.Popen([
                'ngrok', 'http', str(self.admin_port)
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ ngrok –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            time.sleep(5)
            
            # –û—Ç—Ä–∏–º—É—î–º–æ –ø—É–±–ª—ñ—á–Ω—É URL
            for attempt in range(10):
                try:
                    response = requests.get('http://localhost:4040/api/tunnels', timeout=5)
                    if response.status_code == 200:
                        tunnels = response.json()['tunnels']
                        if tunnels:
                            self.public_url = tunnels[0]['public_url']
                            print(f"‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω–∏–π!")
                            print(f"üåê –ü—É–±–ª—ñ—á–Ω–∞ URL: {self.public_url}")
                            return True
                except:
                    pass
                
                time.sleep(2)
                print(f"‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è ngrok... (—Å–ø—Ä–æ–±–∞ {attempt + 1}/10)")
                
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ URL –≤—ñ–¥ ngrok")
            return False
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É ngrok: {e}")
            return False
    
    def start_admin_panel(self):
        """–ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ...")
        
        try:
            # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ
            subprocess.run(['pkill', '-f', 'web_admin.py'], capture_output=True)
            time.sleep(2)
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
            self.admin_process = subprocess.Popen([
                'python3', 'web_admin.py'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            time.sleep(5)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –ø—Ä–∞—Ü—é—î
            for attempt in range(10):
                try:
                    response = requests.get(f'http://localhost:{self.admin_port}', timeout=5)
                    if response.status_code in [200, 302]:  # 302 - redirect to login
                        print("‚úÖ –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞!")
                        return True
                except:
                    pass
                
                time.sleep(2)
                print(f"‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ... (—Å–ø—Ä–æ–±–∞ {attempt + 1}/10)")
                
            print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å")
            return False
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ: {e}")
            return False
    
    def start_bot(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        print("ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...")
        
        try:
            # –ó—É–ø–∏–Ω—è—î–º–æ –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ –ø—Ä–æ—Ü–µ—Å–∏ –±–æ—Ç–∞
            subprocess.run(['pkill', '-f', 'node bot.js'], capture_output=True)
            time.sleep(2)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ npm –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
            if not os.path.exists('node_modules'):
                print("üì¶ –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è npm –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π...")
                subprocess.run(['npm', 'install'], check=True)
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
            self.bot_process = subprocess.Popen([
                'npm', 'start'
            ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            
            # –ß–µ–∫–∞—î–º–æ –ø–æ–∫–∏ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
            time.sleep(5)
            
            print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω–∏–π!")
            return True
            
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")
            return False
    
    def show_status(self):
        """–ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å—É"""
        print("\n" + "="*70)
        print("üéØ –°–¢–ê–¢–£–° –°–ò–°–¢–ï–ú–ò")
        print("="*70)
        
        if self.public_url:
            print(f"üåê –ü—É–±–ª—ñ—á–Ω–∞ URL –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ: {self.public_url}")
            print(f"üîë –ü–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ: admin123")
            print(f"üì± –í—ñ–¥–∫—Ä–∏–π—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –≤ –±—Ä–∞—É–∑–µ—Ä—ñ –¥–ª—è –¥–æ—Å—Ç—É–ø—É")
        else:
            print("‚ùå Ngrok –Ω–µ –∑–∞–ø—É—â–µ–Ω–∏–π")
            
        print(f"üîß –õ–æ–∫–∞–ª—å–Ω–∏–π –ø–æ—Ä—Ç –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ: {self.admin_port}")
        print(f"ü§ñ Telegram –±–æ—Ç: –∞–∫—Ç–∏–≤–Ω–∏–π")
        print(f"‚è∞ –ß–∞—Å –∑–∞–ø—É—Å–∫—É: {datetime.now().strftime('%H:%M:%S')}")
        print("="*70)
        print("üí° –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Ctrl+C –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏")
        print("="*70)
    
    def monitor_processes(self):
        """–ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—ñ–≤"""
        while True:
            try:
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –ø—Ä–∞—Ü—é—î
                if self.admin_process and self.admin_process.poll() is not None:
                    print("‚ùå –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑—É–ø–∏–Ω–∏–ª–∞—Å—è!")
                    break
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ ngrok –ø—Ä–∞—Ü—é—î
                if self.ngrok_process and self.ngrok_process.poll() is not None:
                    print("‚ùå Ngrok –∑—É–ø–∏–Ω–∏–≤—Å—è!")
                    break
                
                # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –±–æ—Ç –ø—Ä–∞—Ü—é—î
                if self.bot_process and self.bot_process.poll() is not None:
                    print("‚ùå Telegram –±–æ—Ç –∑—É–ø–∏–Ω–∏–≤—Å—è!")
                    break
                
                time.sleep(10)
                
            except KeyboardInterrupt:
                break
            except Exception as e:
                print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É: {e}")
                break
    
    def cleanup(self):
        """–û—á–∏—â–µ–Ω–Ω—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ñ"""
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏...")
        
        if self.admin_process:
            self.admin_process.terminate()
            print("‚úÖ –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –∑—É–ø–∏–Ω–µ–Ω–∞")
            
        if self.ngrok_process:
            self.ngrok_process.terminate()
            print("‚úÖ Ngrok –∑—É–ø–∏–Ω–µ–Ω–∏–π")
            
        if self.bot_process:
            self.bot_process.terminate()
            print("‚úÖ Telegram –±–æ—Ç –∑—É–ø–∏–Ω–µ–Ω–∏–π")
    
    def run(self):
        """–û—Å–Ω–æ–≤–Ω–∏–π –º–µ—Ç–æ–¥ –∑–∞–ø—É—Å–∫—É"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–≤–Ω–æ—ó —Å–∏—Å—Ç–µ–º–∏ (–ë–æ—Ç + –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å + Ngrok)...")
        print("="*70)
        
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
        if not self.check_dependencies():
            print("‚ùå –ù–µ –≤—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ!")
            return
        
        try:
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å
            if not self.start_admin_panel():
                return
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok
            if not self.start_ngrok():
                return
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
            if not self.start_bot():
                return
            
            # –ü–æ–∫–∞–∑—É—î–º–æ —Å—Ç–∞—Ç—É—Å
            self.show_status()
            
            # –ó–∞–ø—É—Å–∫–∞—î–º–æ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥
            self.monitor_processes()
            
        except KeyboardInterrupt:
            print("\nüëã –û—Ç—Ä–∏–º–∞–Ω–æ —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è")
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
        finally:
            self.cleanup()

if __name__ == '__main__':
    launcher = BotAdminLauncher()
    launcher.run() 