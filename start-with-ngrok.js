require('dotenv').config();
const { spawn } = require('child_process');

async function startWithNgrok() {
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-–∞–¥–º—ñ–Ω–∫–∏...');
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä
    const adminServer = spawn('node', ['admin-panel/server.js'], {
      stdio: 'inherit'
    });
    
    // –ß–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏, —â–æ–± —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏–≤—Å—è
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    console.log('üåê –ó–∞–ø—É—Å–∫ ngrok...');
    
    // –ó–∞–ø—É—Å–∫–∞—î–º–æ ngrok —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫
    const ngrokProcess = spawn('ngrok', ['http', '3000'], {
      stdio: ['pipe', 'pipe', 'pipe']
    });
    
    let ngrokUrl = '';
    
    // –û—Ç—Ä–∏–º—É—î–º–æ URL –≤—ñ–¥ ngrok
    ngrokProcess.stdout.on('data', (data) => {
      const output = data.toString();
      console.log('Ngrok:', output);
      
      // –®—É–∫–∞—î–º–æ URL –≤ –≤–∏–≤–æ–¥—ñ ngrok
      const urlMatch = output.match(/https:\/\/[a-zA-Z0-9-]+\.ngrok\.io/);
      if (urlMatch && !ngrokUrl) {
        ngrokUrl = urlMatch[0];
        console.log('\n‚úÖ Ngrok –∑–∞–ø—É—â–µ–Ω–æ!');
        console.log(`üîó –ü—É–±–ª—ñ—á–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è: ${ngrokUrl}`);
        console.log(`üõ°Ô∏è –ê–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞ –∑–∞ –∞–¥—Ä–µ—Å–æ—é: ${ngrokUrl}`);
        console.log(`üîë –ü–∞—Ä–æ–ª—å: ${process.env.ADMIN_PASSWORD || 'admin123'}`);
        
        // –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞ –∑ –æ–Ω–æ–≤–ª–µ–Ω–∏–º URL
        console.log('\nü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...');
        const bot = spawn('node', ['bot.js'], {
          stdio: 'inherit',
          env: { ...process.env, ADMIN_URL: ngrokUrl }
        });
        
        // –û–±—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        process.on('SIGINT', async () => {
          console.log('\nüõë –ó—É–ø–∏–Ω–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤...');
          adminServer.kill();
          bot.kill();
          ngrokProcess.kill();
          process.exit(0);
        });
      }
    });
    
    ngrokProcess.stderr.on('data', (data) => {
      console.log('Ngrok error:', data.toString());
    });
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error);
    process.exit(1);
  }
}

startWithNgrok(); 